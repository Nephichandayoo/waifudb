[
  {
    "name": "Heist: Assault by SWAT and Defense Units",
    "events": [
      {
        "name": "SWAT Response",
        "description": "Saat alarm berbunyi, unit SWAT tiba dengan disiplin dan kekuatan penuh. Formasi pasukan ini segera mengepung lokasi heist, memaksa tim untuk bereaksi cepat dalam menghadapi ancaman tinggi dari barisan pertahanan elit.",
        "resolutions": [
          {
            "condition": "room.players.some(p => room.roles[p] === 'Negotiator') && room.players.some(p => (db.get_user(p).heistinven || []).some(i => i.name === 'Smoke Grenade'))",
            "effect": "const userWithSmoke = room.players.find(p => (db.get_user(p).heistinven || []).some(i => i.name === 'Smoke Grenade'));\ndb.get_user(userWithSmoke).heistinven = db.get_user(userWithSmoke).heistinven.filter(i => i.name !== 'Smoke Grenade');\nroom.players.forEach(p => { room.heist.health[p] -= 30; room.heist.atk[p] = (room.heist.atk[p] || 100) - 10; });\n'Negotiator berhasil mengoordinasikan Smoke Grenade untuk menciptakan penutup asap, menunda agresi SWAT meskipun tim tetap menerima kerusakan moderat.'",
            "reward": 150
          },
          {
            "condition": "room.players.some(p => room.roles[p] === 'Scout')",
            "effect": "room.players.forEach(p => { room.heist.health[p] -= 40; room.heist.atk[p] = (room.heist.atk[p] || 100) - 15; });\n'Scout mendeteksi formasi dan pergerakan SWAT, sehingga tim sempat beradaptasi, namun serangan cepat tetap mengakibatkan kerusakan yang cukup besar.'",
            "reward": 100
          },
          {
            "condition": "true",
            "effect": "room.players.forEach(p => { room.heist.health[p] -= 60; room.heist.atk[p] = (room.heist.atk[p] || 100) - 20; });\n'Tanpa adanya pengelolaan situasi khusus, SWAT menyerang dengan penuh kekuatan, mengakibatkan penurunan kesehatan dan kemampuan bertarung yang signifikan.'",
            "reward": 0
          }
        ]
      },
      {
        "name": "Barricade Defense",
        "description": "Gedung sasaran dilengkapi dengan sistem penghalang dan penjagaan ketat. Tim harus menerobos barricade yang dijaga oleh unit pertahanan profesional, di mana setiap kesalahan akan langsung berdampak besar pada keselamatan.",
        "resolutions": [
          {
            "condition": "room.players.some(p => room.roles[p] === 'Infiltrator') && room.players.some(p => (db.get_user(p).heistinven || []).some(i => i.name === 'Crowbar'))",
            "effect": "const userWithCrowbar = room.players.find(p => (db.get_user(p).heistinven || []).some(i => i.name === 'Crowbar'));\ndb.get_user(userWithCrowbar).heistinven = db.get_user(userWithCrowbar).heistinven.filter(i => i.name !== 'Crowbar');\nroom.players.forEach(p => { room.heist.health[p] -= 25; room.heist.atk[p] = (room.heist.atk[p] || 100) - 5; });\n'Infiltrator dengan cepat menabrak struktur barricade menggunakan Crowbar, membuka jalan meski tim tetap menanggung kerusakan minimal akibat benturan pertahanan.'",
            "reward": 180
          },
          {
            "condition": "true",
            "effect": "room.players.forEach(p => { room.heist.health[p] -= 50; room.heist.atk[p] = (room.heist.atk[p] || 100) - 15; });\n'Jika tidak ada persiapan khusus, unit pertahanan menjaganya ketat, sehingga upaya penerobosan menghasilkan kerusakan yang jauh lebih tinggi.'",
            "reward": 0
          }
        ]
      },
      {
        "name": "Biometric Lockdown",
        "description": "Gudang tempat barang berharga disimpan dilengkapi sistem biometric canggih. Begitu heist dimulai, sensor mengaktifkan protokol lockdown dan mengirimkan dukungan drone, menambah lapisan pertahanan otomatis.",
        "resolutions": [
          {
            "condition": "room.players.some(p => room.roles[p] === 'Hacker') && room.players.some(p => (db.get_user(p).heistinven || []).some(i => i.name === 'Laptop'))",
            "effect": "const userWithLaptop = room.players.find(p => (db.get_user(p).heistinven || []).some(i => i.name === 'Laptop'));\ndb.get_user(userWithLaptop).heistinven = db.get_user(userWithLaptop).heistinven.filter(i => i.name !== 'Laptop');\nroom.players.forEach(p => { room.heist.health[p] -= 35; room.heist.atk[p] = (room.heist.atk[p] || 100) - 10; });\n'Hacker berhasil meretas sistem biometric dengan Laptop, menunda lockdown dan mengurangi dampak kerusakan, meskipun tidak sepenuhnya menghindari serangan sistem.'",
            "reward": 170
          },
          {
            "condition": "true",
            "effect": "room.players.forEach(p => { room.heist.health[p] -= 55; room.heist.atk[p] = (room.heist.atk[p] || 100) - 20; });\n'Tanpa upaya peretasan, sistem biometric mengunci seluruh area dengan cepat, mengakibatkan dampak yang jauh lebih parah bagi setiap anggota tim.'",
            "reward": 0
          }
        ]
      },
      {
        "name": "Final Escape: Pursuit by Defense Units",
        "description": "Setelah penjarahan, tim harus segera melarikan diri karena unit pertahanan dan SWAT kini mengepung area. Setiap detik penundaan dapat berujung pada penangkapan atau tembakan yang mengenai target, sehingga strategi pelarian sangat menentukan.",
        "resolutions": [
          {
            "condition": "room.players.some(p => room.roles[p] === 'Driver') && room.players.some(p => (db.get_user(p).heistinven || []).some(i => i.name === 'Getaway Car'))",
            "effect": "const userWithCar = room.players.find(p => (db.get_user(p).heistinven || []).some(i => i.name === 'Getaway Car'));\ndb.get_user(userWithCar).heistinven = db.get_user(userWithCar).heistinven.filter(i => i.name !== 'Getaway Car');\nroom.players.forEach(p => { room.heist.health[p] -= 30; room.heist.atk[p] = (room.heist.atk[p] || 100) - 5; });\n'Dengan keahlian Driver menggunakan Getaway Car, tim mampu membuka jalur pelarian meskipun masih menerima tekanan dari pengejaran unit pertahanan.'",
            "reward": 200
          },
          {
            "condition": "room.players.some(p => room.roles[p] === 'Negotiator')",
            "effect": "room.players.forEach(p => { room.heist.health[p] -= 45; room.heist.atk[p] = (room.heist.atk[p] || 100) - 10; });\n'Negotiator berusaha menegosiasikan waktu dengan pihak pertahanan, sehingga tekanan pengejaran berkurang meskipun tim tetap mengalami kerusakan yang tidak kalah signifikan.'",
            "reward": 150
          },
          {
            "condition": "true",
            "effect": "room.players.forEach(p => { room.heist.health[p] -= 55; room.heist.atk[p] = (room.heist.atk[p] || 100) - 15; });\n'Dalam kondisi tanpa dukungan khusus, pengejaran unit pertahanan berlangsung agresif, mengakibatkan pengurangan kesehatan dan kemampuan serang tim secara besar-besaran.'",
            "reward": 0
          }
        ]
      }
    ]
  },
  {
    "name": "Elite Brutal Counterattack",
    "events": [
      {
        "name": "Armored Convoy Ambush",
        "description": "Sebuah konvoi lapis baja muncul dengan kekuatan mematikan, menghadirkan serangan berat yang menembus pertahanan tim dengan kekuatan tank dan artileri.",
        "resolutions": [
          {
            "condition": "room.players.some(p => room.roles[p] === 'Driver') && room.players.some(p => (db.get_user(p).heistinven || []).some(i => i.name === 'Getaway Car'))",
            "effect": "const userWithCar = room.players.find(p => (db.get_user(p).heistinven || []).some(i => i.name === 'Getaway Car'));\ndb.get_user(userWithCar).heistinven = db.get_user(userWithCar).heistinven.filter(i => i.name !== 'Getaway Car');\nroom.players.forEach(p => { room.heist.health[p] -= 50; room.heist.atk[p] = (room.heist.atk[p] || 100) - 20; });\n'Driver menggunakan Getaway Car untuk meretas jalur, sehingga dampak serangan konvoi menjadi lebih ringan.'",
            "reward": 220
          },
          {
            "condition": "true",
            "effect": "room.players.forEach(p => { room.heist.health[p] -= 80; room.heist.atk[p] = (room.heist.atk[p] || 100) - 35; });\n'Konvoi lapis baja menggempur tanpa ampun, mengakibatkan kerusakan besar pada seluruh tim.'",
            "reward": 0
          }
        ]
      },
      {
        "name": "Helicopter Overwatch Strike",
        "description": "Helikopter militer melakukan serangan udara dengan presisi mematikan, menyapu area heist dengan tembakan beruntun dan artileri dari udara.",
        "resolutions": [
          {
            "condition": "room.players.some(p => room.roles[p] === 'Medic') && room.players.some(p => (db.get_user(p).heistinven || []).some(i => i.name === 'Medkit'))",
            "effect": "const userWithMedkit = room.players.find(p => (db.get_user(p).heistinven || []).some(i => i.name === 'Medkit'));\ndb.get_user(userWithMedkit).heistinven = db.get_user(userWithMedkit).heistinven.filter(i => i.name !== 'Medkit');\nroom.players.forEach(p => { room.heist.health[p] -= 40; room.heist.atk[p] = (room.heist.atk[p] || 100) - 15; });\n'Medic dengan sigap menggunakan Medkit untuk memberikan perlindungan darurat, mengurangi dampak serangan helikopter menjadi lebih terkontrol.'",
            "reward": 180
          },
          {
            "condition": "true",
            "effect": "room.players.forEach(p => { room.heist.health[p] -= 70; room.heist.atk[p] = (room.heist.atk[p] || 100) - 30; });\n'Tidak adanya respon darurat membuat serangan helikopter menimpa seluruh tim secara brutal.'",
            "reward": 0
          }
        ]
      },
      {
        "name": "Bomb Disposal Siege",
        "description": "Unit pengeboman elit mengepung lokasi dengan kombinasi robot dan taktik peledak, menciptakan medan perang yang kacau dan sulit diatasi.",
        "resolutions": [
          {
            "condition": "room.players.some(p => room.roles[p] === 'Engineer') && room.players.some(p => (db.get_user(p).heistinven || []).some(i => i.name === 'Jamming Device'))",
            "effect": "const userWithJamming = room.players.find(p => (db.get_user(p).heistinven || []).some(i => i.name === 'Jamming Device'));\ndb.get_user(userWithJamming).heistinven = db.get_user(userWithJamming).heistinven.filter(i => i.name !== 'Jamming Device');\nroom.players.forEach(p => { room.heist.health[p] -= 45; room.heist.atk[p] = (room.heist.atk[p] || 100) - 15; });\n'Engineer mengaktifkan Jamming Device untuk mengacaukan komunikasi musuh, sehingga kerusakan menjadi lebih terkontrol.'",
            "reward": 200
          },
          {
            "condition": "room.players.some(p => room.roles[p] === 'Engineer') && room.players.some(p => (db.get_user(p).heistinven || []).some(i => i.name === 'Laser Deflector'))",
            "effect": "const userWithLaser = room.players.find(p => (db.get_user(p).heistinven || []).some(i => i.name === 'Laser Deflector'));\ndb.get_user(userWithLaser).heistinven = db.get_user(userWithLaser).heistinven.filter(i => i.name !== 'Laser Deflector');\nroom.players.forEach(p => { room.heist.health[p] -= 50; room.heist.atk[p] = (room.heist.atk[p] || 100) - 20; });\n'Engineer menggunakan Laser Deflector untuk mengalihkan sebagian serangan musuh, mengurangi sedikit kerusakan.'",
            "reward": 170
          },
          {
            "condition": "true",
            "effect": "room.players.forEach(p => { room.heist.health[p] -= 75; room.heist.atk[p] = (room.heist.atk[p] || 100) - 35; });\n'Pengepungan oleh unit Bomb Disposal mengakibatkan serangan gabungan yang menghancurkan, membuat tim mengalami kerusakan parah.'",
            "reward": 0
          }
        ]
      }
    ]
  },
  {
    "name": "Teror Elite: Invasi Kegelapan",
    "events": [
      {
        "name": "Phantom Reaper Squad",
        "description": "Dalam keheningan malam, muncul segerombolan unit Phantom Reaper yang menyerang tanpa peringatan. Gerakan mereka secepat bayangan, menerkam dari kegelapan, sehingga setiap detik menjadi mencekam dan menakutkan.",
        "resolutions": [
          {
            "condition": "room.players.some(p => room.roles[p] === 'Scout')",
            "effect": "room.players.forEach(p => { room.heist.health[p] -= 70; room.heist.atk[p] = (room.heist.atk[p] || 100) - 30; }); 'Kepekaan seorang Scout memungkinkan tim mendeteksi bayangan sejak dini, sehingga mengurangi dampak serangan meski tetap menorehkan luka signifikan.'",
            "reward": 220
          },
          {
            "condition": "true",
            "effect": "room.players.forEach(p => { room.heist.health[p] -= 90; room.heist.atk[p] = (room.heist.atk[p] || 100) - 40; }); 'Tanpa peringatan, serangan mendadak Phantom Reaper mengguncang seluruh tim dengan kerusakan yang parah.'",
            "reward": 0
          }
        ]
      },
      {
        "name": "Dreadnought Overrun",
        "description": "Menghantui medan pertempuran, Dreadnought adalah mesin perang raksasa dengan persenjataan lengkap yang menindas segala pertahanan. Kehadirannya menghadirkan tekanan luar biasa dan ketakutan mutlak.",
        "resolutions": [
          {
            "condition": "room.players.some(p => room.roles[p] === 'Mastermind')",
            "effect": "room.players.forEach(p => { room.heist.health[p] -= 65; room.heist.atk[p] = (room.heist.atk[p] || 100) - 25; }); 'Dengan kepiawaian seorang Mastermind, strategi evakuasi darurat tersusun rapi, mengurangi dampak brutal Dreadnought.'",
            "reward": 230
          },
          {
            "condition": "true",
            "effect": "room.players.forEach(p => { room.heist.health[p] -= 95; room.heist.atk[p] = (room.heist.atk[p] || 100) - 45; }); 'Tanpa strategi khusus, serangan Dreadnought menghancurkan pertahanan tim, meninggalkan luka dan kerusakan yang menghantui.'",
            "reward": 0
          }
        ]
      },
      {
        "name": "Hellfire Suppression Strike",
        "description": "Langit menjadi medan pertarungan saat drone armed Hellfire turun dengan intensitas mematikan. Tembakan laser dan roket pembakar menerjang, menyapu area dengan kecepatan dan kekejaman yang luar biasa.",
        "resolutions": [
          {
            "condition": "room.players.some(p => room.roles[p] === 'Hacker') && room.players.some(p => (db.get_user(p).heistinven || []).some(i => i.name === 'Laptop'))",
            "effect": "const userWithLaptop = room.players.find(p => (db.get_user(p).heistinven || []).some(i => i.name === 'Laptop'));\ndb.get_user(userWithLaptop).heistinven = db.get_user(userWithLaptop).heistinven.filter(i => i.name !== 'Laptop');\nroom.players.forEach(p => { room.heist.health[p] -= 55; room.heist.atk[p] = (room.heist.atk[p] || 100) - 20; });\n'Hacker dengan Laptop berhasil mengintervensi sistem kontrol drone, mengurangi intensitas tembakan dan dampak serangan secara signifikan.'",
            "reward": 210
          },
          {
            "condition": "true",
            "effect": "room.players.forEach(p => { room.heist.health[p] -= 80; room.heist.atk[p] = (room.heist.atk[p] || 100) - 35; });\n'Tanpa intervensi yang tepat, serangan Hellfire memporak-porandakan seluruh pertahanan, menurunkan HP dan ATK secara drastis.'",
            "reward": 0
          }
        ]
      }
    ]
  }
]